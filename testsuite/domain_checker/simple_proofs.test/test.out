test_simple: Success
  <Abstraction test.dep:22:15-22:23>: (n:Nat -> ((Eq n) n))
  <SourceId test.dep:22:16-22:17>: Nat
  <SourceId test.dep:22:19-22:23>: ((Eq n) n)
test_plus_reduces_Z: Success
  <Apply test.dep:39:23-39:71>: (n:Nat -> ((Eq n) ((add n) Z)))
  <Apply test.dep:39:23-39:36>: ((k:Nat -> ((Eq (S k)) (S ((add k) Z)))) -> (n:Nat -> ((Eq n) ((add n) Z))))
  <SourceId test.dep:39:23-39:31>: (((Eq Z) Z) -> ((k:Nat -> ((Eq (S k)) (S ((add k) Z)))) -> (n:Nat -> ((Eq n) ((add n) Z)))))
  <SourceId test.dep:39:32-39:36>: ((Eq Z) Z)
  <Abstraction test.dep:39:38-39:70>: (k:Nat -> ((Eq (S k)) (S ((add k) Z))))
  <SourceId test.dep:39:39-39:40>: Nat
  <Apply test.dep:39:42-39:70>: ((Eq (S k)) (S ((add k) Z)))
  <SourceId test.dep:39:42-39:46>: (((Eq k) ((add k) Z)) -> ((Eq (S k)) (S ((add k) Z))))
  <Apply test.dep:39:48-39:69>: ((Eq k) ((add k) Z))
  <SourceId test.dep:39:48-39:67>: (k:Nat -> ((Eq k) ((add k) Z)))
  <SourceId test.dep:39:68-39:69>: Nat
