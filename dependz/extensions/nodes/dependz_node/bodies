Fresh_Symbol_Count : Integer := 0;

function P_Fresh_Symbol
  (Node : access Bare_Dependz_Node_Type'Class; Prefix : Symbol_Type)
   return Symbol_Type
is
   Fresh_Count : Wide_Wide_String := Fresh_Symbol_Count'Wide_Wide_Image;
begin
   Fresh_Symbol_Count := Fresh_Symbol_Count + 1;
   return Lookup_Symbol
     (Node.Unit.Context,
      Image (Prefix) & "$" & Fresh_Count (2 .. Fresh_Count'Last));
end P_Fresh_Symbol;

function P_Create_Logic_Var
  (Node : access Bare_Dependz_Node_Type'Class) return Logic_Var is
begin
   return Eq_Node.Refs.Create;
end P_Create_Logic_Var;

function P_Set_Logic_Equation_Debug_Mode
  (Node : access Bare_Dependz_Node_Type'Class; Mode : Integer) return Boolean
is
begin
   Set_Debug_State (Debug_State_Type'Val (Mode));
   return True;
end P_Set_Logic_Equation_Debug_Mode;
